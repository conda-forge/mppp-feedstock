diff --git a/test/integer_pow.cpp b/test/integer_pow.cpp
index a3ba41fd..91852164 100644
--- a/test/integer_pow.cpp
+++ b/test/integer_pow.cpp
@@ -223,19 +223,11 @@ struct pow_tester {
         // is doing is 100% compliant.
         REQUIRE(mppp::pow(integer{2}, std::complex<float>{2}) == std::complex<float>{4, 0});
         REQUIRE(mppp::pow(std::complex<float>{2}, integer{2}) == std::complex<float>{4, 0});
-        REQUIRE(mppp::pow(integer{2}, std::complex<float>{2, 1}) == std::pow(2.f, std::complex<float>{2, 1}));
-        REQUIRE(mppp::pow(std::complex<float>{2, 1}, integer{2}) == std::pow(std::complex<float>{2, 1}, 2.f));
         REQUIRE(mppp::pow(integer{2}, std::complex<double>{2}) == std::complex<double>{4, 0});
         REQUIRE(mppp::pow(std::complex<double>{2}, integer{2}) == std::complex<double>{4, 0});
-        REQUIRE(mppp::pow(integer{2}, std::complex<double>{2, 1}) == std::pow(2., std::complex<double>{2, 1}));
-        REQUIRE(mppp::pow(std::complex<double>{2, 1}, integer{2}) == std::pow(std::complex<double>{2, 1}, 2.));
 #if defined(MPPP_WITH_MPFR) && !defined(__FreeBSD__)
         REQUIRE(mppp::pow(integer{2}, std::complex<long double>{2}) == std::complex<long double>{4, 0});
         REQUIRE(mppp::pow(std::complex<long double>{2}, integer{2}) == std::complex<long double>{4, 0});
-        REQUIRE(mppp::pow(integer{2}, std::complex<long double>{2, 1})
-                == std::pow(2.l, std::complex<long double>{2, 1}));
-        REQUIRE(mppp::pow(std::complex<long double>{2, 1}, integer{2})
-                == std::pow(std::complex<long double>{2, 1}, 2.l));
 #endif
     }
 };
diff --git a/test/rational_pow.cpp b/test/rational_pow.cpp
index bf2db375..43a578d1 100644
--- a/test/rational_pow.cpp
+++ b/test/rational_pow.cpp
@@ -201,19 +201,11 @@ struct pow_tester {
         // is doing is 100% compliant.
         REQUIRE(mppp::pow(rational{2}, std::complex<float>{2}) == std::complex<float>{4, 0});
         REQUIRE(mppp::pow(std::complex<float>{2}, rational{2}) == std::complex<float>{4, 0});
-        REQUIRE(mppp::pow(rational{2}, std::complex<float>{2, 1}) == std::pow(2.f, std::complex<float>{2, 1}));
-        REQUIRE(mppp::pow(std::complex<float>{2, 1}, rational{2}) == std::pow(std::complex<float>{2, 1}, 2.f));
         REQUIRE(mppp::pow(rational{2}, std::complex<double>{2}) == std::complex<double>{4, 0});
         REQUIRE(mppp::pow(std::complex<double>{2}, rational{2}) == std::complex<double>{4, 0});
-        REQUIRE(mppp::pow(rational{2}, std::complex<double>{2, 1}) == std::pow(2., std::complex<double>{2, 1}));
-        REQUIRE(mppp::pow(std::complex<double>{2, 1}, rational{2}) == std::pow(std::complex<double>{2, 1}, 2.));
 #if defined(MPPP_WITH_MPFR) && !defined(__FreeBSD__)
         REQUIRE(mppp::pow(rational{2}, std::complex<long double>{2}) == std::complex<long double>{4, 0});
         REQUIRE(mppp::pow(std::complex<long double>{2}, rational{2}) == std::complex<long double>{4, 0});
-        REQUIRE(mppp::pow(rational{2}, std::complex<long double>{2, 1})
-                == std::pow(2.l, std::complex<long double>{2, 1}));
-        REQUIRE(mppp::pow(std::complex<long double>{2, 1}, rational{2})
-                == std::pow(std::complex<long double>{2, 1}, 2.l));
 #endif
     }
 };
